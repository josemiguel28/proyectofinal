<?phpnamespace Controllers\Carrito;use Controllers\PublicController;use Dao\CartV2\CartV2;use Views\Renderer;use Utilities\Security;class Carrito extends PublicController{    /*    private $id_session;    private $servicioId = 0;    private $productoEnCarrito = false;    private $viewData = array();        public function __construct()    {        parent::__construct();        session_start();        $this->id_session = session_id();    }    private function getPostData()    {        $this->servicioId = isset($_POST["servicioId"]) ? $_POST["servicioId"] : 0;    }    private function agregarProductoAlCarrito()    {        $usercod = \Utilities\Security::getUserId();        $crrctd = 1;        $crrprc = 0;        $crrfching = date("Y-m-d H:i:s");        \Dao\CartV2\CartV2::agregarProductoAlCarrito($usercod, $this->servicioId, $crrctd, $crrprc, $crrfching, $this->id_session);    }        private function prepareviewData(){        $servicioId = \Dao\CartV2\CartV2::obtenerIdProductoEnCarrito($this->id_session);        if($servicioId){            $this->productoEnCarrito = true;        }else{            $this->productoEnCarrito = false;        }                $this->viewData["productoEnCarrito"] = $this->productoEnCarrito;    } */    private $servicioId = 0;    private $viewData = array();    private $total = 0;    private $subtotal = 0;    private $impuesto = 0;    public function __construct()    {        parent::__construct();        $this->usercod = Security::getUserId();    }    private function getPostData()    {        $this->servicioId = isset($_POST["servicioId"]) ? $_POST["servicioId"] : 0;    }        private function eliminarDelCarrito()    {        CartV2::eliminarProductoCarrito($this->usercod, intval($this->servicioId));    }        private function calcularCostos(){        $this->total = 0;        $this->subtotal = 0;        $this->impuestos = 0.15;                $tmpData = CartV2::obtenerProductosEnCarrito($this->usercod);        if($tmpData){            foreach($tmpData as $producto){               $this->subtotal += $producto["Precio"] * $producto["Cantidad"];                 $this->impuesto += 15 *  $producto["Cantidad"];                            }        }        $this->total = $this->subtotal + $this->impuesto;    }        public function getProductosCarrito()    {        CartV2::obtenerProductosEnCarrito($this->usercod);    }        private function prepareView(){        if(!CartV2::obtenerProductosEnCarrito($this->usercod)){            $this->viewData["noHayProductoEnCarrito"] = true;            $this->viewData["hidden"] = "hidden";        }else{            $this->viewData["productosCarrito"] = CartV2::obtenerProductosEnCarrito($this->usercod);        }            $this->viewData["subtotal"] = $this->subtotal;    $this->viewData["isv"] = $this->impuesto;    $this->viewData["total"] = $this->total;}    public function run(): void    {        if ($this->isPostBack()) {            $this->getPostData();            $this->eliminarDelCarrito();        }        $this->calcularCostos();        $this->prepareView();        Renderer::render("carrito/carrito", $this->viewData);    }}